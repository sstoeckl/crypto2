[{"path":"https://sstoeckl.github.io/crypto2/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 crypto2 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sstoeckl.github.io/crypto2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sebastian Stoeckl. Author, maintainer.            Package commissioner maintainer. Jesse Vent. Contributor.            Creator crypto package provided idea basis package.","code":""},{"path":"https://sstoeckl.github.io/crypto2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stoeckl S (2023). crypto2: Download Crypto Currency Data 'CoinMarketCap' without 'API'. https://github.com/sstoeckl/crypto2, https://sstoeckl.github.io/crypto2/.","code":"@Manual{,   title = {crypto2: Download Crypto Currency Data from 'CoinMarketCap' without 'API'},   author = {Sebastian Stoeckl},   year = {2023},   note = {https://github.com/sstoeckl/crypto2, https://sstoeckl.github.io/crypto2/}, }"},{"path":[]},{"path":"https://sstoeckl.github.io/crypto2/index.html","id":"historical-cryptocurrency-prices-for-active-and-delisted-tokens","dir":"","previous_headings":"","what":"Historical Cryptocurrency Prices for Active and Delisted Tokens!","title":"Download Crypto Currency Data from CoinMarketCap without API","text":"modification original crypto package jesse vent. entirely set use means tidyverse provides tibbles data available via web-api coinmarketcap.com. require API key turn provides information also available website coinmarketcap.com. allows user retrieve crypto_listings() list coins historically listed CMC (main dataset avoid delisting bias) according CMC API documentation crypto_list() list coins listed either active, delisted untracked according CMC API documentation crypto_info() list information available available coins according CMC API documentation crypto_history() powerful function package allows download entire available history coins covered CMC according CMC API documentation crypto_global_quotes() dataset historical global crypto currency market metrics CMC API documentation fiat_list() mapping fiat currencies (plus precious metals) available via CMC WEB API exchange_list() list exchanges available either active, delisted untracked according CMC API documentation exchange_info() list information available given exchanges according CMC API documentation","code":""},{"path":"https://sstoeckl.github.io/crypto2/index.html","id":"update","dir":"","previous_headings":"","what":"Update","title":"Download Crypto Currency Data from CoinMarketCap without API","text":"Since version 1.4.5 added new function crypto_global_quotes() retrieves global aggregate market statistics CMC. also bugs fixed. Since version 1.4.4 new function crypto_listings() introduced retrieves new/latest/historical listings listing information CMC. Additionally aspects functions reworked. noticed finalWait = TRUE seem necessary moment, well sleep can set ‘0’ seconds. experience strange behavior might due api sending back strange (old) results. case let sleep = 60 (default) finalWait = TRUE (default). Since version 1.4.0 package reworked retrieve many assets possible one api call, new “feature” introduced CMC send back initially requested data api call within 60 seconds. one needs wait 60s calling api . Additionally, since version v1.4.3 package allows data interval larger daily (e.g. ‘2d’ ‘7d’/‘weekly’)","code":""},{"path":"https://sstoeckl.github.io/crypto2/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download Crypto Currency Data from CoinMarketCap without API","text":"can install crypto2 CRAN directly github :","code":"install.packages(\"crypto2\") # install.packages(\"devtools\") devtools::install_github(\"sstoeckl/crypto2\")"},{"path":"https://sstoeckl.github.io/crypto2/index.html","id":"package-contribution","dir":"","previous_headings":"","what":"Package Contribution","title":"Download Crypto Currency Data from CoinMarketCap without API","text":"package provides API free efficient access information https://coinmarketcap.com also available website. uses variety modification web-scraping tools tidyverse (especially purrr). provides access active coins also now delisted also categorized untracked, including historical pricing information, package provides valid basis Asset Pricing Studies based crypto currencies require survivorship-bias-free information. addition , package maintainer currently working also providing delisting returns (similarly CRSP stocks) also eliminate delisting bias.","code":""},{"path":"https://sstoeckl.github.io/crypto2/index.html","id":"package-usage","dir":"","previous_headings":"","what":"Package Usage","title":"Download Crypto Currency Data from CoinMarketCap without API","text":"First load crypto2-package download set active coins https://coinmarketcap.com (additionally one load delisted coins only_Active=FALSE well untracked coins add_untracked=TRUE). Next download information first three coins list. next step show logos three coins provided https://coinmarketcap.com.  addition show tags provided https://coinmarketcap.com. Additionally: urls pertaining coins provided https://coinmarketcap.com. next step download time series data coins. Similarly, download data monthly basis. Alternatively, determine price coins currencies. list currencies available fiat_list() download time series depicting prices terms Bitcoin Euro (note multiple currencies can given convert, separated “,”). new features version 1.4.4. introduced possibility download historical listings listing information (add quote = TRUE). additional feature added version 1.4.5 retrieves global aggregate market statistics CMC. can use quotes plot information aggregate market capitalization:  Last least, one can get information exchanges. download list active/inactive/untracked exchanges using exchange_list(): download information “binance” “bittrex”: can access information fee structure, amount cryptocurrencies traded (USD) fiat currencies allowed:","code":"library(crypto2) library(dplyr) #>  #> Attache Paket: 'dplyr' #> Die folgenden Objekte sind maskiert von 'package:stats': #>  #>     filter, lag #> Die folgenden Objekte sind maskiert von 'package:base': #>  #>     intersect, setdiff, setequal, union  # List all active coins coins <- crypto_list(only_active=TRUE) # retrieve information for all (the first 3) of those coins coin_info <- crypto_info(coins, limit=3, finalWait=FALSE) #> ❯ Scraping crypto info #>  #> Scraping  https://web-api.coinmarketcap.com/v1/cryptocurrency/info?id=1,2,3  with  65  characters! #> ❯ Processing crypto info #>   # and give the first two lines of information per coin coin_info #> # A tibble: 3 × 19 #>      id name   symbol categ…¹ descr…² slug  logo  subre…³ notice date_…⁴ twitt…⁵ #> * <int> <chr>  <chr>  <chr>   <chr>   <chr> <chr> <chr>   <chr>  <chr>   <chr>   #> 1     1 Bitco… BTC    coin    \"## Wh… bitc… http… bitcoin \"\"     2013-0… \"\"      #> 2     2 Litec… LTC    coin    \"## Wh… lite… http… liteco… \"\"     2013-0… \"Litec… #> 3     3 Namec… NMC    coin    \"Namec… name… http… nameco… \"\"     2013-0… \"Namec… #> # … with 8 more variables: is_hidden <int>, date_launched <lgl>, #> #   self_reported_circulating_supply <lgl>, self_reported_market_cap <lgl>, #> #   tags <list>, self_reported_tags <lgl>, urls <list>, platform <list>, and #> #   abbreviated variable names ¹​category, ²​description, ³​subreddit, #> #   ⁴​date_added, ⁵​twitter_username coin_info %>% select(slug,tags) %>% tidyr::unnest(tags) %>% group_by(slug) %>% slice(1,n()) #> # A tibble: 6 × 2 #> # Groups:   slug [3] #>   slug     tags               #>   <chr>    <chr>              #> 1 bitcoin  mineable           #> 2 bitcoin  paradigm-portfolio #> 3 litecoin mineable           #> 4 litecoin medium-of-exchange #> 5 namecoin mineable           #> 6 namecoin platform coin_info %>% select(slug,urls) %>% tidyr::unnest(urls) %>% filter(name %in% c(\"reddit\",\"twitter\")) #> # A tibble: 5 × 3 #>   slug     name    url                                 #>   <chr>    <chr>   <chr>                               #> 1 bitcoin  reddit  https://reddit.com/r/bitcoin        #> 2 litecoin twitter https://twitter.com/LitecoinProject #> 3 litecoin reddit  https://reddit.com/r/litecoin       #> 4 namecoin twitter https://twitter.com/Namecoin        #> 5 namecoin reddit  https://reddit.com/r/namecoin # retrieve historical data for all (the first 3) of them coin_hist <- crypto_history(coins, limit=3, start_date=\"20210101\", end_date=\"20210105\", finalWait=FALSE) #> ❯ Scraping historical crypto data #>  #> ❯ Processing historical crypto data #>   # and give the first two times of information per coin coin_hist %>% group_by(slug) %>% slice(1:2) #> # A tibble: 6 × 16 #> # Groups:   slug [3] #>   timestamp              id slug    name  symbol ref_cur    open    high     low #>   <dttm>              <int> <chr>   <chr> <chr>  <chr>     <dbl>   <dbl>   <dbl> #> 1 2021-01-01 23:59:59     1 bitcoin Bitc… BTC    USD     2.90e+4 2.96e+4 2.88e+4 #> 2 2021-01-02 23:59:59     1 bitcoin Bitc… BTC    USD     2.94e+4 3.32e+4 2.91e+4 #> 3 2021-01-01 23:59:59     2 liteco… Lite… LTC    USD     1.25e+2 1.33e+2 1.23e+2 #> 4 2021-01-02 23:59:59     2 liteco… Lite… LTC    USD     1.26e+2 1.40e+2 1.24e+2 #> 5 2021-01-01 23:59:59     3 nameco… Name… NMC    USD     4.39e-1 4.63e-1 4.32e-1 #> 6 2021-01-02 23:59:59     3 nameco… Name… NMC    USD     4.51e-1 5.10e-1 4.15e-1 #> # … with 7 more variables: close <dbl>, volume <dbl>, market_cap <dbl>, #> #   time_open <dttm>, time_close <dttm>, time_high <dttm>, time_low <dttm> # retrieve historical data for all (the first 3) of them coin_hist_m <- crypto_history(coins, limit=3, start_date=\"20210101\", end_date=\"20210501\", interval =\"monthly\", finalWait=FALSE) #> ❯ Scraping historical crypto data #>  #> ❯ Processing historical crypto data #>   # and give the first two times of information per coin coin_hist_m %>% group_by(slug) %>% slice(1:2) #> # A tibble: 6 × 16 #> # Groups:   slug [3] #>   timestamp              id slug    name  symbol ref_cur    open    high     low #>   <dttm>              <int> <chr>   <chr> <chr>  <chr>     <dbl>   <dbl>   <dbl> #> 1 2021-01-01 23:59:59     1 bitcoin Bitc… BTC    USD     2.90e+4 2.96e+4 2.88e+4 #> 2 2021-02-01 23:59:59     1 bitcoin Bitc… BTC    USD     3.31e+4 3.46e+4 3.24e+4 #> 3 2021-01-01 23:59:59     2 liteco… Lite… LTC    USD     1.25e+2 1.33e+2 1.23e+2 #> 4 2021-02-01 23:59:59     2 liteco… Lite… LTC    USD     1.30e+2 1.36e+2 1.26e+2 #> 5 2021-01-01 23:59:59     3 nameco… Name… NMC    USD     4.39e-1 4.63e-1 4.32e-1 #> 6 2021-02-01 23:59:59     3 nameco… Name… NMC    USD     7.82e-1 8.05e-1 7.48e-1 #> # … with 7 more variables: close <dbl>, volume <dbl>, market_cap <dbl>, #> #   time_open <dttm>, time_close <dttm>, time_high <dttm>, time_low <dttm> fiats <- fiat_list() fiats #> # A tibble: 93 × 4 #>       id name                 sign  symbol #>    <int> <chr>                <chr> <chr>  #>  1  2781 United States Dollar $     USD    #>  2  2782 Australian Dollar    $     AUD    #>  3  2783 Brazilian Real       R$    BRL    #>  4  2784 Canadian Dollar      $     CAD    #>  5  2785 Swiss Franc          Fr    CHF    #>  6  2786 Chilean Peso         $     CLP    #>  7  2787 Chinese Yuan         ¥     CNY    #>  8  2788 Czech Koruna         Kč    CZK    #>  9  2789 Danish Krone         kr    DKK    #> 10  2790 Euro                 €     EUR    #> # … with 83 more rows # retrieve historical data for all (the first 3) of them coin_hist2 <- crypto_history(coins, convert=\"BTC,EUR\", limit=3, start_date=\"20210101\", end_date=\"20210105\", finalWait=FALSE) #> ❯ Scraping historical crypto data #>  #> ❯ Processing historical crypto data #>   # and give the first two times of information per coin coin_hist2 %>% group_by(slug,ref_cur) %>% slice(1:2) #> # A tibble: 12 × 16 #> # Groups:   slug, ref_cur [6] #>    timestamp              id slug   name  symbol ref_cur    open    high     low #>    <dttm>              <int> <chr>  <chr> <chr>  <chr>     <dbl>   <dbl>   <dbl> #>  1 2021-01-01 23:59:43     1 bitco… Bitc… BTC    BTC     1   e+0 1.00e+0 9.98e-1 #>  2 2021-01-02 23:59:43     1 bitco… Bitc… BTC    BTC     1   e+0 1.00e+0 9.99e-1 #>  3 2021-01-01 23:59:06     1 bitco… Bitc… BTC    EUR     2.37e+4 2.43e+4 2.36e+4 #>  4 2021-01-02 23:59:06     1 bitco… Bitc… BTC    EUR     2.42e+4 2.73e+4 2.40e+4 #>  5 2021-01-01 23:59:43     2 litec… Lite… LTC    BTC     4.30e-3 4.56e-3 4.27e-3 #>  6 2021-01-02 23:59:43     2 litec… Lite… LTC    BTC     4.30e-3 4.24e-3 4.23e-3 #>  7 2021-01-01 23:59:06     2 litec… Lite… LTC    EUR     1.02e+2 1.09e+2 1.01e+2 #>  8 2021-01-02 23:59:06     2 litec… Lite… LTC    EUR     1.04e+2 1.16e+2 1.02e+2 #>  9 2021-01-01 23:59:43     3 namec… Name… NMC    BTC     1.51e-5 1.58e-5 1.50e-5 #> 10 2021-01-02 23:59:43     3 namec… Name… NMC    BTC     1.54e-5 1.57e-5 1.31e-5 #> 11 2021-01-01 23:59:06     3 namec… Name… NMC    EUR     3.60e-1 3.80e-1 3.54e-1 #> 12 2021-01-02 23:59:06     3 namec… Name… NMC    EUR     3.71e-1 4.21e-1 3.41e-1 #> # … with 7 more variables: close <dbl>, volume <dbl>, market_cap <dbl>, #> #   time_open <dttm>, time_close <dttm>, time_high <dttm>, time_low <dttm> latest_listings <- crypto_listings(which=\"latest\", limit=10, quote=TRUE, finalWait=FALSE) latest_listings #> # A tibble: 10 × 23 #>       id name    symbol slug  self_…¹ self_…² tvl_r…³ last_upd…⁴ USD_p…⁵ USD_v…⁶ #>    <int> <chr>   <chr>  <chr> <lgl>   <lgl>   <lgl>   <date>       <dbl>   <dbl> #>  1     1 Bitcoin BTC    bitc… NA      NA      NA      2022-10-25 1.95e+4 2.50e10 #>  2    52 XRP     XRP    xrp   NA      NA      NA      2022-10-25 4.53e-1 1.11e 9 #>  3    74 Dogeco… DOGE   doge… NA      NA      NA      2022-10-25 6.08e-2 2.41e 8 #>  4   825 Tether  USDT   teth… NA      NA      NA      2022-10-25 1.00e+0 3.42e10 #>  5  1027 Ethere… ETH    ethe… NA      NA      NA      2022-10-25 1.38e+3 1.14e10 #>  6  1839 BNB     BNB    bnb   NA      NA      NA      2022-10-25 2.79e+2 5.43e 8 #>  7  2010 Cardano ADA    card… NA      NA      NA      2022-10-25 3.71e-1 3.57e 8 #>  8  3408 USD Co… USDC   usd-… NA      NA      NA      2022-10-25 1.00e+0 2.58e 9 #>  9  4687 Binanc… BUSD   bina… NA      NA      NA      2022-10-25 1.00e+0 4.48e 9 #> 10  5426 Solana  SOL    sola… NA      NA      NA      2022-10-25 2.91e+1 5.26e 8 #> # … with 13 more variables: USD_volume_change_24h <dbl>, #> #   USD_percent_change_1h <dbl>, USD_percent_change_24h <dbl>, #> #   USD_percent_change_7d <dbl>, USD_percent_change_30d <dbl>, #> #   USD_percent_change_60d <dbl>, USD_percent_change_90d <dbl>, #> #   USD_market_cap <dbl>, USD_market_cap_dominance <dbl>, #> #   USD_fully_diluted_market_cap <dbl>, USD_tvl <lgl>, #> #   USD_market_cap_by_total_supply <dbl>, USD_last_updated <chr>, and … all_quotes <- crypto_global_quotes(which=\"historical\", quote=TRUE) all_quotes #> # A tibble: 3,459 × 12 #>    timestamp  btc_domi…¹ activ…² activ…³ activ…⁴ USD_t…⁵ USD_t…⁶ USD_t…⁷ USD_a…⁸ #>    <date>          <dbl>   <int>   <int>   <int>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 2013-04-29       94.2      NA      NA      NA  1.58e9       0      NA  9.19e7 #>  2 2013-04-30       94.4      NA      NA      NA  1.69e9       0      NA  9.47e7 #>  3 2013-05-01       94.4      NA      NA      NA  1.64e9       0      NA  9.24e7 #>  4 2013-05-02       94.1      NA      NA      NA  1.33e9       0      NA  7.90e7 #>  5 2013-05-03       94.2      NA      NA      NA  1.28e9       0      NA  7.45e7 #>  6 2013-05-04       93.9      NA      NA      NA  1.17e9       0      NA  7.16e7 #>  7 2013-05-05       94.0      NA      NA      NA  1.34e9       0      NA  8.07e7 #>  8 2013-05-06       94.1      NA      NA      NA  1.37e9       0      NA  8.12e7 #>  9 2013-05-07       94.4      NA      NA      NA  1.31e9       0      NA  7.38e7 #> 10 2013-05-08       94.4      NA      NA      NA  1.32e9       0      NA  7.43e7 #> # … with 3,449 more rows, 3 more variables: USD_altcoin_volume_24h <dbl>, #> #   USD_altcoin_volume_24h_reported <dbl>, USD_timestamp <chr>, and abbreviated #> #   variable names ¹​btc_dominance, ²​active_cryptocurrencies, ³​active_exchanges, #> #   ⁴​active_market_pairs, ⁵​USD_total_market_cap, ⁶​USD_total_volume_24h, #> #   ⁷​USD_total_volume_24h_reported, ⁸​USD_altcoin_market_cap all_quotes %>% select(timestamp, USD_total_market_cap, USD_altcoin_market_cap) %>%    tidyr::pivot_longer(cols = 2:3, names_to = \"Market Cap\", values_to = \"bn. USD\") %>%    tidyr::separate(`Market Cap`,into = c(\"Currency\",\"Type\",\"Market\",\"Cap\")) %>%    dplyr::mutate(`bn. USD`=`bn. USD`/1000000000) %>%    ggplot2::ggplot(ggplot2::aes(x=timestamp,y=`bn. USD`,color=Type)) + ggplot2::geom_line() +   ggplot2::labs(title=\"Market capitalization in bn USD\", subtitle=\"CoinMarketCap.com\") exchanges <- exchange_list(only_active=TRUE) exchanges #> # A tibble: 520 × 6 #>       id name         slug         is_active first_historical_data last_histor…¹ #>    <int> <chr>        <chr>            <int> <date>                <date>        #>  1    16 Poloniex     poloniex             1 2018-04-26            2022-10-25    #>  2    21 BTCC         btcc                 1 2018-04-26            2022-10-25    #>  3    22 Bittrex      bittrex              1 2018-04-26            2022-10-25    #>  4    24 Kraken       kraken               1 2018-04-26            2022-10-25    #>  5    34 Bittylicious bittylicious         1 2018-04-26            2022-10-25    #>  6    36 CEX.IO       cex-io               1 2018-04-26            2022-10-25    #>  7    37 Bitfinex     bitfinex             1 2018-04-26            2022-10-25    #>  8    42 HitBTC       hitbtc               1 2018-04-26            2022-10-25    #>  9    50 EXMO         exmo                 1 2018-04-26            2022-10-25    #> 10    61 Okcoin       okcoin               1 2018-04-26            2022-10-25    #> # … with 510 more rows, and abbreviated variable name ¹​last_historical_data ex_info <- exchange_info(exchanges %>% filter(slug %in% c('binance','bittrex')), finalWait=FALSE) #> ❯ Scraping exchange info #>  #> Scraping exchanges from  https://web-api.coinmarketcap.com/v1/exchange/info?id=22,270  with  60  characters! #> ❯ Processing exchange info #>  ex_info #> # A tibble: 2 × 19 #>      id name    slug  descr…¹ notice logo  type  date_…² is_hi…³ is_re…⁴ maker…⁵ #> * <int> <chr>   <chr> <chr>   <chr>  <chr> <chr> <chr>     <int> <lgl>     <dbl> #> 1    22 Bittrex bitt…  <NA>   \"\"     http… \"\"    2014-0…       0 NA         0    #> 2   270 Binance bina… \"## Wh… \"Bina… http… \"\"    2017-0…       0 NA         0.02 #> # … with 8 more variables: taker_fee <dbl>, spot_volume_usd <dbl>, #> #   spot_volume_last_updated <dttm>, weekly_visits <int>, tags <lgl>, #> #   urls <list>, countries <lgl>, fiats <list>, and abbreviated variable names #> #   ¹​description, ²​date_launched, ³​is_hidden, ⁴​is_redistributable, ⁵​maker_fee ex_info %>% select(contains(\"fee\")) #> # A tibble: 2 × 2 #>   maker_fee taker_fee #>       <dbl>     <dbl> #> 1      0         0    #> 2      0.02      0.04 ex_info %>% select(contains(\"spot\")) #> # A tibble: 2 × 2 #>   spot_volume_usd spot_volume_last_updated #>             <dbl> <dttm>                   #> 1       16025712. 2022-10-25 15:10:16      #> 2     9656049729. 2022-10-25 15:10:16 ex_info %>% select(slug,fiats) %>% tidyr::unnest(fiats) #> # A tibble: 47 × 2 #>    slug    value #>    <chr>   <chr> #>  1 bittrex USD   #>  2 binance AED   #>  3 binance ARS   #>  4 binance AUD   #>  5 binance AZN   #>  6 binance BRL   #>  7 binance CAD   #>  8 binance CHF   #>  9 binance CLP   #> 10 binance COP   #> # … with 37 more rows"},{"path":"https://sstoeckl.github.io/crypto2/index.html","id":"authorlicense","dir":"","previous_headings":"Package Usage","what":"Author/License","title":"Download Crypto Currency Data from CoinMarketCap without API","text":"Sebastian Stöckl - Package Creator, Modifier & Maintainer - sstoeckl github project licensed MIT License - see <license.md> file details<\/license.md>","code":""},{"path":"https://sstoeckl.github.io/crypto2/index.html","id":"acknowledgments","dir":"","previous_headings":"Package Usage","what":"Acknowledgments","title":"Download Crypto Currency Data from CoinMarketCap without API","text":"Thanks team https://coinmarketcap.com great work , especially Alice Liu (Research Lead) Aaron K. support regard information delistings. Thanks Jesse Vent providing (fully research compatible) crypto-package inspired package.","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_global_quotes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves historical quotes for the global aggregate market — crypto_global_quotes","title":"Retrieves historical quotes for the global aggregate market — crypto_global_quotes","text":"code uses web api. retrieves global quote data (latest/historic) require 'API' key.","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_global_quotes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves historical quotes for the global aggregate market — crypto_global_quotes","text":"","code":"crypto_global_quotes(   which = \"latest\",   convert = \"USD\",   start_date = NULL,   end_date = NULL,   interval = \"daily\",   quote = FALSE,   finalWait = FALSE )"},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_global_quotes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves historical quotes for the global aggregate market — crypto_global_quotes","text":"string Shall code retrieve latest listing historic listing? convert string (default: USD) one available fiat precious metals prices (fiat_list()). one selected please separate comma (e.g. \"USD,BTC\"), necessary 'quote=TRUE' start_date string Start date retrieve data , format 'yyyymmdd' end_date string End date retrieve data , format 'yyyymmdd', provided, today assumed interval string Interval sample data, default 'daily'. Must one \"hourly\" \"daily\" \"weekly\" \"monthly\" \"yearly\" \"1d\" \"2d\" \"3d\" \"7d\" \"14d\" \"15d\" \"30d\" \"60d\" \"90d\" \"365d\" quote logical set TRUE want include price data (FALSE=default) finalWait avoid calling web-api another command 60s (TRUE=default)","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_global_quotes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves historical quotes for the global aggregate market — crypto_global_quotes","text":"List latest/new/historic listings crypto currencies tibble (depending \"\"-switch whether \"quote\" requested, result may contain following variables): btc_dominance number Bitcoin's market dominance percentage market cap. eth_dominance number Ethereum's market dominance percentage market cap. active_cryptocurrencies number Count active crypto currencies tracked CMC includes crypto currencies listing_status \"active\" \"listed\". total_cryptocurrencies number Count crypto currencies tracked CMC includes \"inactive\" listing_status crypto currencies. active_market_pairs number Count active market pairs tracked CoinMarketCap across exchanges. #' active_exchanges number Count active exchanges tracked CMC includes exchanges listing_status \"active\" \"listed\". total_exchanges number Count exchanges tracked CMC includes \"inactive\" listing_status exchanges. last_updated Timestamp record last updated. total_market_cap number sum individual cryptocurrency market capitalizations requested currency. total_volume_24h number sum rolling 24 hour adjusted volume (outlined methodology) crypto currencies requested currency. total_volume_24h_reported number sum rolling 24 hour reported volume crypto currencies requested currency. #' altcoin_volume_24h number sum rolling 24 hour adjusted volume (outlined methodology) crypto currencies excluding Bitcoin requested currency. altcoin_volume_24h_reported number sum rolling 24 hour reported volume crypto currencies excluding Bitcoin requested currency. altcoin_market_cap number sum individual cryptocurrency market capitalizations excluding Bitcoin requested currency.","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_global_quotes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves historical quotes for the global aggregate market — crypto_global_quotes","text":"","code":"if (FALSE) { # return new listings from the last 30 days new_quotes <- crypto_global_quotes(which=\"latest\", quote=FALSE) new_quotes2 <- crypto_global_quotes(which=\"latest\", quote=TRUE, convert=\"BTC,USD\") # return all global quotes in the first week of January 2014 quotes_2014w1 <- crypto_global_quotes(which=\"historical\", quote=TRUE, start_date = \"20140101\", end_date=\"20140107\", interval=\"daily\")  # report in two different currencies listings_2014w1_USDBTC <- crypto_global_quotes(which=\"historical\", quote=TRUE, start_date = \"20140101\", end_date=\"20140107\", interval=\"daily\", convert=\"USD,BTC\") }"},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Get historic crypto currency market data — crypto_history","title":"Get historic crypto currency market data — crypto_history","text":"Scrape crypto currency historic market tables 'CoinMarketCap' https://coinmarketcap.com display results dataframe/tibble. can used conduct analysis crypto financial markets attempt predict future market movements trends.","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get historic crypto currency market data — crypto_history","text":"","code":"crypto_history(   coin_list = NULL,   convert = \"USD\",   limit = NULL,   start_date = NULL,   end_date = NULL,   interval = NULL,   sleep = 0,   finalWait = FALSE )"},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get historic crypto currency market data — crypto_history","text":"coin_list string NULL retrieve currently existing coins (crypto_list()), provide list crypto currencies crypto_list() cryptoi_listings() format (e.g. current /dead coins since 2015) convert (default: USD) one available fiat precious metals prices (fiat_list()). one selected please separate comma (e.g. \"USD,BTC\") limit integer Return top n records, default tokens start_date string Start date retrieve data , format 'yyyymmdd' end_date string End date retrieve data , format 'yyyymmdd', provided, today assumed interval string Interval sample data according seq() needs sleep integer (default 60) Seconds sleep API requests finalWait avoid calling web-api another command 60s (TRUE=default)","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get historic crypto currency market data — crypto_history","text":"Crypto currency historic OHLC market data dataframe additional information via attribute \"info\": timestamp Timestamp entry database slug Coin url slug id Coin market cap unique id name Coin name symbol Coin symbol ref_cur Reference currency open Market open high Market high low Market low close Market close volume Volume 24 hours market_cap Market cap - close x circulating supply time_open Timestamp open time_close Timestamp close time_high Timestamp high time_low Timestamp low main function crypto package. want retrieve active coins pass argument crypto_history(), pass coin name.","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get historic crypto currency market data — crypto_history","text":"","code":"if (FALSE) {  # Retrieving market history for ALL crypto currencies all_coins <- crypto_history(limit = 2) one_coin <- crypto_history(limit = 1)  # Retrieving market history since 2020 for ALL crypto currencies all_coins <- crypto_history(start_date = '20200101',limit=10)  # Retrieve 2015 history for all 2015 crypto currencies coin_list_2015 <- crypto_list(only_active=TRUE) %>%               dplyr::filter(first_historical_data<=\"2015-12-31\",               last_historical_data>=\"2015-01-01\") coins_2015 <- crypto_history(coin_list = coin_list_2015, start_date = \"20150101\", end_date=\"20151231\", limit=20, interval=\"90d\")  }"},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves info (urls, logo, description, tags, platform, date_added, notice, status) on CMC for given id or slug — crypto_info","title":"Retrieves info (urls, logo, description, tags, platform, date_added, notice, status) on CMC for given id or slug — crypto_info","text":"code uses web api. retrieves data active, delisted untracked coins! require 'API' key.","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves info (urls, logo, description, tags, platform, date_added, notice, status) on CMC for given id or slug — crypto_info","text":"","code":"crypto_info(   coin_list = NULL,   limit = NULL,   requestLimit = 300,   sleep = 0,   finalWait = FALSE )"},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves info (urls, logo, description, tags, platform, date_added, notice, status) on CMC for given id or slug — crypto_info","text":"coin_list string NULL retrieve currently active coins (crypto_list()), provide list cryptocurrencies crypto_list() cryptoi_listings() format (e.g. current /dead coins since 2015) limit integer Return top n records, default tokens requestLimit limiting length request URLs bundling api calls sleep integer (default 60) Seconds sleep API requests finalWait avoid calling web-api another command 60s (TRUE=default)","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves info (urls, logo, description, tags, platform, date_added, notice, status) on CMC for given id or slug — crypto_info","text":"List (active historically existing) cryptocurrencies tibble: id CMC id (unique identifier) name Coin name symbol Coin symbol (-unique) slug Coin URL slug (unique) category Coin category: \"token\" \"coin\" description Coin description according CMC logo CMC url CC logo subreddit Name subreddit community notice Markdown formatted notices CMC date_added Date CC added CMC database twitter_username Username CCs twitter account is_hidden TBD date_launched Date CC launched self_reported_circulating_supply Self reported circulating supply self reported tags Self_reported_tags status timestamp status messages tags Tibble tags tag categories url Tibble various resource urls. Gives website, technical_doc (whitepaper), source_code, message_board, chat, announcement, reddit, twitter, (block) explorer urls Platform Metadata parent coin available. Gives id, name, symbol, slug, token address according CMC","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves info (urls, logo, description, tags, platform, date_added, notice, status) on CMC for given id or slug — crypto_info","text":"","code":"if (FALSE) { # return info for bitcoin coin_info <- crypto_info(limit=3) }"},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_list","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_list","text":"code uses web api. retrieves data historic active coins require 'API' key. code uses web api. retrieves data available fiat currencies require API key.","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_list","text":"","code":"crypto_list(only_active = TRUE, add_untracked = FALSE)  fiat_list(include_metals = FALSE)"},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_list","text":"only_active Shall code retrieve active coins (TRUE=default) include inactive coins (FALSE) add_untracked Shall code additionally retrieve untracked coins (FALSE=default) include_metals (default FALSE) Shall code also retrieve available precious metals?","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_list","text":"List (active historically existing) cryptocurrencies tibble: id CMC id (unique identifier) name Coin name symbol Coin symbol (-unique) slug Coin URL slug (unique) rank Current rank CMC (still active) is_active Flag showing whether coin active (1), inactive(0) untracked (-1) first_historical_data First time listed CMC last_historical_data Last time listed CMC, today's date still listed List (active historically existing) cryptocurrencies tibble: id CMC id (unique identifier) symbol Coin symbol (-unique) name Coin name sign Fiat currency sign code Precious metals code","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_list","text":"","code":"if (FALSE) { # return all coins active_list <- crypto_list(only_active=TRUE) all_but_untracked_list <- crypto_list(only_active=FALSE) full_list <- crypto_list(only_active=FALSE,add_untracked=TRUE)  # return all coins active in 2015 coin_list_2015 <- active_list %>% dplyr::filter(first_historical_data<=\"2015-12-31\",               last_historical_data>=\"2015-01-01\") }  if (FALSE) { # return all fiat currencies available on CMC as well as precious metals fiat_list <- fiat_list(include_metals=TRUE) }"},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_listings.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_listings","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_listings","text":"code uses web api. retrieves listing data (latest/new/historic) require 'API' key.","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_listings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_listings","text":"","code":"crypto_listings(   which = \"latest\",   convert = \"USD\",   limit = 5000,   start_date = NULL,   end_date = NULL,   interval = \"day\",   quote = FALSE,   sort = \"cmc_rank\",   sort_dir = \"desc\",   sleep = 0,   finalWait = FALSE )"},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_listings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_listings","text":"string Shall code retrieve latest listing, new listings historic listing? convert string (default: USD) one available fiat precious metals prices (fiat_list()). one selected please separate comma (e.g. \"USD,BTC\"), necessary 'quote=TRUE' limit integer Return top n records, default 5000 (max allowed CMC) start_date string Start date retrieve data , format 'yyyymmdd' end_date string End date retrieve data , format 'yyyymmdd', provided, today assumed interval string Interval sample data according seq() needs quote logical set TRUE want include price data (FALSE=default) sort string use sort results, possible values: \"cmc_rank\" (DEFAULT), \"name\", \"symbol\", \"market_cap\", \"price\", \"circulating_supply\", \"total_supply\", \"max_supply\", \"num_market_pairs\", \"volume_24h\", \"percent_change_1h\", \"percent_change_24h\", \"percent_change_7d\". Especially useful want download top x entries using \"limit\" sort_dir string used specify direction sort \"sort\". Possible values \"asc\" (DEFAULT) \"desc\" sleep integer (default 60) Seconds sleep API requests finalWait avoid calling web-api another command 60s (TRUE=default)","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_listings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_listings","text":"List latest/new/historic listings cryptocurrencies tibble (depending \"\"-switch whether \"quote\" requested, result may contain following variables): id CMC id (unique identifier) name Coin name symbol Coin symbol (-unique) slug Coin URL slug (unique) date_added Date coin added dataset last_updated Last update data database rank Current rank CMC (still active) market_cap market cap - close x circulating supply market_cap_by_total_supply market cap - close x total supply market_cap_dominance market cap dominance fully_diluted_market_cap fully diluted market cap self_reported_market_cap source market cap self-reported self_reported_circulating_supply source circulating supply self-reported tvl_ratio percentage total value locked price latest average price circulating_supply approx. number coins circulation total_supply approx. total amount coins existence right now (minus coins verifiably burned) max_supply CMC approx. max amount coins ever exist lifetime currency num_market_pairs number market pairs across exchanges coin tvl total value locked volume_24h Volume 24 hours volume_change_24h Volume change 24 hours percent_change_1h 1 hour return percent_change_24h 24 hour return percent_change_7d 7 day return","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_listings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_listings","text":"","code":"if (FALSE) { # return new listings from the last 30 days new_listings <- crypto_listings(which=\"new\", quote=FALSE) new_listings2 <- crypto_listings(which=\"new\", quote=TRUE, convert=\"BTC,USD\") # return latest listing (last available data of all CC including quotes) latest_listings <- crypto_listings(which=\"latest\", quote=TRUE)  # return all listings in the first week of January 2014 listings_2014w1 <- crypto_listings(which=\"historical\", quote=TRUE, start_date = \"20140101\", end_date=\"20140107\", interval=\"day\")  # report in two different currencies listings_2014w1_USDBTC <- crypto_listings(which=\"historical\", quote=TRUE, start_date = \"20140101\", end_date=\"20140107\", interval=\"day\", convert=\"USD,BTC\")  # only download the top 10 crypto currencies based on their market capitalization listings_2015w1_mcsort <- crypto_listings(which=\"historical\", quote=TRUE, start_date = \"20150101\", end_date=\"20150107\", interval=\"day\", sort=\"market_cap\", sort_dir=\"desc\", limit=10) }"},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves info (urls,logo,description,tags,platform,date_added,notice,status) on CMC for given exchange slug — exchange_info","title":"Retrieves info (urls,logo,description,tags,platform,date_added,notice,status) on CMC for given exchange slug — exchange_info","text":"code uses web api. retrieves data active, delisted untracked exchanges! require 'API' key.","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves info (urls,logo,description,tags,platform,date_added,notice,status) on CMC for given exchange slug — exchange_info","text":"","code":"exchange_info(   exchange_list = NULL,   limit = NULL,   requestLimit = 300,   sleep = 60,   finalWait = TRUE )"},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves info (urls,logo,description,tags,platform,date_added,notice,status) on CMC for given exchange slug — exchange_info","text":"exchange_list string NULL retrieve currently active exchanges (exchange_list()), provide list exchanges exchange_list() format (e.g. current /delisted) limit integer Return top n records, default exchanges requestLimit limiting length request URLs bundling api calls sleep integer (default 60) Seconds sleep API requests finalWait avoid calling web-api another command 60s (TRUE=default)","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves info (urls,logo,description,tags,platform,date_added,notice,status) on CMC for given exchange slug — exchange_info","text":"List (active historically existing) exchanges tibble: id CMC exchange id (unique identifier) name Exchange name slug Exchange URL slug (unique) description Exchange description according CMC notice Exchange notice (markdown formatted) according CMC logo CMC url CC logo type Type exchange date_launched Launch date exchange is_hidden TBD is_redistributable TBD maker_fee Exchanges maker fee taker_fee Exchanges maker fee spot_volume_usd Current volume USD according CMC spot_volume_last_updated Latest update spot volume status timestamp status messages tags Tibble tags tag categories url Tibble various resource urls. Gives website, blog, fee, twitter. countries Tibble countries exchange active fiat Tibble fiat currencies exchange trades ","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves info (urls,logo,description,tags,platform,date_added,notice,status) on CMC for given exchange slug — exchange_info","text":"","code":"if (FALSE) { # return info for the first three exchanges exchange_info <- exchange_info(limit=3) }"},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — exchange_list","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — exchange_list","text":"code uses web api. retrieves data historic active exchanges require 'API' key.","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — exchange_list","text":"","code":"exchange_list(only_active = TRUE, add_untracked = FALSE)"},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — exchange_list","text":"only_active Shall code retrieve active exchanges (TRUE=default) include inactive coins (FALSE) add_untracked Shall code additionally retrieve untracked exchanges (FALSE=default)","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — exchange_list","text":"List (active historically existing) exchanges tibble: id CMC exchange id (unique identifier) name Exchange name slug Exchange URL slug (unique) is_active Flag showing whether exchange active (1), inactive(0) untracked (-1) first_historical_data First time listed CMC last_historical_data Last time listed CMC, today's date still listed","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — exchange_list","text":"","code":"if (FALSE) { # return all exchanges ex_active_list <- exchange_list(only_active=TRUE) ex_all_but_untracked_list <- exchange_list(only_active=FALSE) ex_full_list <- exchange_list(only_active=FALSE,add_untracked=TRUE) }"},{"path":[]},{"path":"https://sstoeckl.github.io/crypto2/news/index.html","id":"crypto2-140","dir":"Changelog","previous_headings":"","what":"crypto2 1.4.0","title":"crypto2 1.4.0","text":"CRAN release: 2022-01-10 Due change web-api CMC can make one call api per minute (else, just deliver output first call 60 seconds). reduce overhang, redesigned interfaces retrieve many ids one api call possible (limited 2000 character limitation URL). can set requestLimit increase/decrease number simultaneous ids retrieved CMC.","code":""},{"path":"https://sstoeckl.github.io/crypto2/news/index.html","id":"crypto2-130","dir":"Changelog","previous_headings":"","what":"crypto2 1.3.0","title":"crypto2 1.3.0","text":"CRAN release: 2021-06-24 Rewrite crypto_info exchange_info take similar input crypto_history. Also extensively updated readme.","code":""},{"path":"https://sstoeckl.github.io/crypto2/news/index.html","id":"crypto2-121","dir":"Changelog","previous_headings":"","what":"crypto2 1.2.1","title":"crypto2 1.2.1","text":"Adapt spelling ’’ CRAN explain taken Jesse Vent package authors (except function names everything else new)","code":""},{"path":"https://sstoeckl.github.io/crypto2/news/index.html","id":"crypto2-120","dir":"Changelog","previous_headings":"","what":"crypto2 1.2.0","title":"crypto2 1.2.0","text":"Add Exchange functions, delete unnecessary functions, update readme, prepare submission cran","code":""},{"path":"https://sstoeckl.github.io/crypto2/news/index.html","id":"crypto2-1139000","dir":"Changelog","previous_headings":"","what":"crypto2 1.1.3.9000","title":"crypto2 1.1.3.9000","text":"Corrected small error crypto_info non-existing slugs led break code (reason stopped using “Insistent”)","code":""},{"path":"https://sstoeckl.github.io/crypto2/news/index.html","id":"crypto2-1139000-1","dir":"Changelog","previous_headings":"","what":"crypto2 1.1.3.9000","title":"crypto2 1.1.3.9000","text":"Correct glitch tag data, now enough group observations available. Info therefore deleted. Corrected small error empty list coin_info","code":""},{"path":"https://sstoeckl.github.io/crypto2/news/index.html","id":"crypto2-1129000","dir":"Changelog","previous_headings":"","what":"crypto2 1.1.2.9000","title":"crypto2 1.1.2.9000","text":"Added NEWS.md file track changes package. Deleted necessary API key crypto_list(). Now need api key anymore","code":""}]

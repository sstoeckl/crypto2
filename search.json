[{"path":"https://sstoeckl.github.io/crypto2/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 crypto2 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sstoeckl.github.io/crypto2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sebastian Stoeckl. Author, maintainer.            Package commissioner maintainer. Jesse Vent. Contributor.            Creator crypto package provided idea basis package.","code":""},{"path":"https://sstoeckl.github.io/crypto2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stoeckl S (2024). crypto2: Download Crypto Currency Data 'CoinMarketCap' without 'API'. R package version 2.0.1.99,  https://sstoeckl.github.io/crypto2/, https://github.com/sstoeckl/crypto2.","code":"@Manual{,   title = {crypto2: Download Crypto Currency Data from 'CoinMarketCap' without 'API'},   author = {Sebastian Stoeckl},   year = {2024},   note = {R package version 2.0.1.99,  https://sstoeckl.github.io/crypto2/},   url = {https://github.com/sstoeckl/crypto2}, }"},{"path":[]},{"path":"https://sstoeckl.github.io/crypto2/index.html","id":"historical-cryptocurrency-prices-for-active-and-delisted-tokens","dir":"","previous_headings":"","what":"Historical Cryptocurrency Prices for Active and Delisted Tokens!","title":"Download Crypto Currency Data from CoinMarketCap without API","text":"modification original crypto package jesse vent. entirely set use means tidyverse provides tibbles data available via web-api coinmarketcap.com. require API key turn provides information also available website coinmarketcap.com. allows user retrieve crypto_listings() list coins historically listed CMC (main dataset avoid delisting bias) according CMC API documentation crypto_list() list coins listed either active, delisted untracked according CMC API documentation crypto_info() list information available available coins according CMC API documentation crypto_history() powerful function package allows download entire available history coins covered CMC according CMC API documentation crypto_global_quotes() dataset historical global crypto currency market metrics CMC API documentation fiat_list() mapping fiat currencies (plus precious metals) available via CMC WEB API exchange_list() list exchanges available either active, delisted untracked according CMC API documentation exchange_info() list information available given exchanges according CMC API documentation","code":""},{"path":[]},{"path":"https://sstoeckl.github.io/crypto2/index.html","id":"version-201-july-2024","dir":"","previous_headings":"","what":"Version 2.0.1 (July 2024)","title":"Download Crypto Currency Data from CoinMarketCap without API","text":"Slight change api output broke crypto_info(). Fixed.","code":""},{"path":"https://sstoeckl.github.io/crypto2/index.html","id":"version-200-may-2024","dir":"","previous_headings":"","what":"Version 2.0.0 (May 2024)","title":"Download Crypto Currency Data from CoinMarketCap without API","text":"major change api structure coinmarketcap.com, package rewritten. result, many functions rewritten, data available similar format similar accuracy. Unfortunately, potentially break many users implementations. detailed list changes: crypto_list() modified delivers data . exchange_list() modified delivers data . fiat_list() modified longer delivers available currencies precious metals (therefore USD Bitcoin available ). crypto_listings() needed modified, multiple base currencies available . Also fields downloaded CMC might changed. still retrieves latest listings, new listings well historical listings. fields returned somewhat slightly changed. Also, sorting available , want download top x CCs market cap, download CCs sort R. crypto_info() modified, data structure changed. fields returned somewhat slightly changed. crypto_history() modified. still retrieves OHLC history coins, slower due increased number necessary api calls. number available intervals strongly limited, hourly daily data still available. Currently USD BTC available quote currencies library. crypto_global_quotes() modified. still produces clear picture global market, data structure somewhat slightly changed.","code":""},{"path":"https://sstoeckl.github.io/crypto2/index.html","id":"version-147","dir":"","previous_headings":"","what":"Version 1.4.7","title":"Download Crypto Currency Data from CoinMarketCap without API","text":"Since version 1.4.6 added possibility “sort” historical crypto_listings() _asc_ending _desc_ending order (“sort_dir”) allow possibility download top x crypto currencies using “limit” based requested sort (available “new” sorting). Also corrected problems sourcing lists now “last_historical_data” field available . Since version 1.4.5 added new function crypto_global_quotes() retrieves global aggregate market statistics CMC. also bugs fixed. Since version 1.4.4 new function crypto_listings() introduced retrieves new/latest/historical listings listing information CMC. Additionally aspects functions reworked. noticed finalWait = TRUE seem necessary moment, well sleep can set ‘0’ seconds. experience strange behavior might due api sending back strange (old) results. case let sleep = 60 (default) finalWait = TRUE (default). Since version 1.4.0 package reworked retrieve many assets possible one api call, new “feature” introduced CMC send back initially requested data api call within 60 seconds. one needs wait 60s calling api . Additionally, since version v1.4.3 package allows data interval larger daily (e.g. ‘2d’ ‘7d’ ‘weekly’)","code":""},{"path":"https://sstoeckl.github.io/crypto2/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download Crypto Currency Data from CoinMarketCap without API","text":"can install crypto2 CRAN directly github :","code":"install.packages(\"crypto2\") # install.packages(\"devtools\") devtools::install_github(\"sstoeckl/crypto2\")"},{"path":"https://sstoeckl.github.io/crypto2/index.html","id":"package-contribution","dir":"","previous_headings":"","what":"Package Contribution","title":"Download Crypto Currency Data from CoinMarketCap without API","text":"package provides API free efficient access information https://coinmarketcap.com also available website. uses variety modification web-scraping tools tidyverse (especially purrr). provides access active coins also now delisted also categorized untracked, including historical pricing information, package provides valid basis Asset Pricing Studies based crypto currencies require survivorship-bias-free information. addition , package maintainer currently working also providing delisting returns (similarly CRSP stocks) also eliminate delisting bias.","code":""},{"path":"https://sstoeckl.github.io/crypto2/index.html","id":"package-usage","dir":"","previous_headings":"","what":"Package Usage","title":"Download Crypto Currency Data from CoinMarketCap without API","text":"First load crypto2-package download set active coins https://coinmarketcap.com (additionally one load delisted coins only_Active=FALSE well untracked coins add_untracked=TRUE). Next download information first three coins list. next step show logos three coins provided https://coinmarketcap.com.  addition show tags provided https://coinmarketcap.com. Additionally: urls pertaining coins provided https://coinmarketcap.com. next step download time series data coins. Similarly, download data hourly basis. Alternatively, determine price coins currencies. list currencies available fiat_list() download time series depicting prices terms Bitcoin Euro (note multiple currencies can given convert, separated “,”). new features version 1.4.4. introduced possibility download historical listings listing information (add quote = TRUE). additional feature added version 1.4.5 retrieves global aggregate market statistics CMC. can use quotes plot information aggregate market capitalization:  Last least, one can get information exchanges. download list active/inactive/untracked exchanges using exchange_list(): download information “binance” “bittrex”: can access information fee structure, fiat currencies allowed:","code":"library(crypto2) library(dplyr) #>  #> Attache Paket: 'dplyr' #> Die folgenden Objekte sind maskiert von 'package:stats': #>  #>     filter, lag #> Die folgenden Objekte sind maskiert von 'package:base': #>  #>     intersect, setdiff, setequal, union  # List all active coins coins <- crypto_list(only_active=TRUE) # retrieve information for all (the first 3) of those coins coin_info <- crypto_info(coins, limit=3, finalWait=FALSE) #> ❯ Scraping crypto info #>  #> ❯ Processing crypto info #>   # and give the first two lines of information per coin coin_info #> # A tibble: 3 × 32 #>      id name     symbol slug     category description   date_added status notice #>   <int> <chr>    <chr>  <chr>    <chr>    <chr>         <date>     <chr>  <chr>  #> 1     1 Bitcoin  BTC    bitcoin  coin     \"## What Is … 2010-07-13 active \"\"     #> 2     2 Litecoin LTC    litecoin coin     \"## What Is … 2013-04-28 active \"\"     #> 3     3 Namecoin NMC    namecoin coin     \"Namecoin (N… 2013-04-28 active \"\"     #> # ℹ 23 more variables: alert_type <int>, alert_link <chr>, #> #   latest_update_time <dttm>, watch_list_ranking <int>, date_launched <date>, #> #   is_audited <lgl>, display_tv <int>, is_infinite_max_supply <int>, #> #   tv_coin_symbol <chr>, use_faq <lgl>, holders_flag <lgl>, #> #   ratings_flag <lgl>, analysis_flag <lgl>, socials_flag <lgl>, #> #   has_extra_info_flag <lgl>, upcoming <named list>, tags <list>, #> #   crypto_rating <list>, urls <list>, faq_description <list>, … coin_info %>% select(slug,tags) %>% tidyr::unnest(tags) %>% group_by(slug) %>% slice(1,n()) #> # A tibble: 6 × 2 #> # Groups:   slug [3] #>   slug     tags$slug             $name                    $category #>   <chr>    <chr>                 <chr>                    <chr>     #> 1 bitcoin  mineable              \"Mineable\"               OTHERS    #> 2 bitcoin  ftx-bankruptcy-estate \"FTX Bankruptcy Estate \" CATEGORY  #> 3 litecoin mineable              \"Mineable\"               OTHERS    #> 4 litecoin medium-of-exchange    \"Medium of Exchange\"     INDUSTRY  #> 5 namecoin mineable              \"Mineable\"               OTHERS    #> 6 namecoin platform              \"Platform\"               CATEGORY coin_info %>% pull(urls) %>% .[[1]] |> unlist() #>                            urls.website                      urls.technical_doc  #>                  \"https://bitcoin.org/\"       \"https://bitcoin.org/bitcoin.pdf\"  #>                          urls.explorer1                          urls.explorer2  #>              \"https://blockchain.info/\"     \"https://live.blockcypher.com/btc/\"  #>                          urls.explorer3                          urls.explorer4  #>        \"https://blockchair.com/bitcoin\"       \"https://explorer.viabtc.com/btc\"  #>                          urls.explorer5                        urls.source_code  #> \"https://www.okx.com/web3/explorer/btc\"    \"https://github.com/bitcoin/bitcoin\"  #>                      urls.message_board                             urls.reddit  #>               \"https://bitcointalk.org\"          \"https://reddit.com/r/bitcoin\" # retrieve historical data for all (the first 3) of them coin_hist <- crypto_history(coins, limit=3, start_date=\"20210101\", end_date=\"20210105\", finalWait=FALSE) #> ❯ Scraping historical crypto data #>  #> ❯ Processing historical crypto data #>   # and give the first two times of information per coin coin_hist %>% group_by(slug) %>% slice(1:2) #> # A tibble: 6 × 17 #> # Groups:   slug [3] #>      id slug     name     symbol timestamp           ref_cur_id ref_cur_name #>   <int> <chr>    <chr>    <chr>  <dttm>              <chr>      <chr>        #> 1     1 bitcoin  Bitcoin  BTC    2021-01-01 23:59:59 2781       USD          #> 2     1 bitcoin  Bitcoin  BTC    2021-01-02 23:59:59 2781       USD          #> 3     2 litecoin Litecoin LTC    2021-01-01 23:59:59 2781       USD          #> 4     2 litecoin Litecoin LTC    2021-01-02 23:59:59 2781       USD          #> 5     3 namecoin Namecoin NMC    2021-01-01 23:59:59 2781       USD          #> 6     3 namecoin Namecoin NMC    2021-01-02 23:59:59 2781       USD          #> # ℹ 10 more variables: time_open <dttm>, time_close <dttm>, time_high <dttm>, #> #   time_low <dttm>, open <dbl>, high <dbl>, low <dbl>, close <dbl>, #> #   volume <dbl>, market_cap <dbl> # retrieve historical data for all (the first 3) of them coin_hist_m <- crypto_history(coins, limit=3, start_date=\"20210101\", end_date=\"20210102\", interval =\"1h\", finalWait=FALSE) #> ❯ Scraping historical crypto data #>  #> ❯ Processing historical crypto data #>   # and give the first two times of information per coin coin_hist_m %>% group_by(slug) %>% slice(1:2) #> # A tibble: 6 × 17 #> # Groups:   slug [3] #>      id slug     name     symbol timestamp           ref_cur_id ref_cur_name #>   <int> <chr>    <chr>    <chr>  <dttm>              <chr>      <chr>        #> 1     1 bitcoin  Bitcoin  BTC    2021-01-01 01:59:59 2781       USD          #> 2     1 bitcoin  Bitcoin  BTC    2021-01-01 02:59:59 2781       USD          #> 3     2 litecoin Litecoin LTC    2021-01-01 01:59:59 2781       USD          #> 4     2 litecoin Litecoin LTC    2021-01-01 02:59:59 2781       USD          #> 5     3 namecoin Namecoin NMC    2021-01-01 01:59:59 2781       USD          #> 6     3 namecoin Namecoin NMC    2021-01-01 02:59:59 2781       USD          #> # ℹ 10 more variables: time_open <dttm>, time_close <dttm>, time_high <dttm>, #> #   time_low <dttm>, open <dbl>, high <dbl>, low <dbl>, close <dbl>, #> #   volume <dbl>, market_cap <dbl> fiats <- fiat_list() fiats #> # A tibble: 1 × 4 #>      id name                 sign  symbol #>   <int> <chr>                <chr> <chr>  #> 1  2781 United States Dollar $     USD # retrieve historical data for all (the first 3) of them coin_hist2 <- crypto_history(coins, convert=\"USD\", limit=3, start_date=\"20210101\", end_date=\"20210105\", finalWait=FALSE) #> ❯ Scraping historical crypto data #>  #> ❯ Processing historical crypto data #>   # and give the first two times of information per coin coin_hist2 %>% group_by(slug,ref_cur_name) %>% slice(1:2) #> # A tibble: 6 × 17 #> # Groups:   slug, ref_cur_name [3] #>      id slug     name     symbol timestamp           ref_cur_id ref_cur_name #>   <int> <chr>    <chr>    <chr>  <dttm>              <chr>      <chr>        #> 1     1 bitcoin  Bitcoin  BTC    2021-01-01 23:59:59 2781       USD          #> 2     1 bitcoin  Bitcoin  BTC    2021-01-02 23:59:59 2781       USD          #> 3     2 litecoin Litecoin LTC    2021-01-01 23:59:59 2781       USD          #> 4     2 litecoin Litecoin LTC    2021-01-02 23:59:59 2781       USD          #> 5     3 namecoin Namecoin NMC    2021-01-01 23:59:59 2781       USD          #> 6     3 namecoin Namecoin NMC    2021-01-02 23:59:59 2781       USD          #> # ℹ 10 more variables: time_open <dttm>, time_close <dttm>, time_high <dttm>, #> #   time_low <dttm>, open <dbl>, high <dbl>, low <dbl>, close <dbl>, #> #   volume <dbl>, market_cap <dbl> latest_listings <- crypto_listings(which=\"latest\", limit=10, quote=TRUE, finalWait=FALSE) latest_listings #> # A tibble: 5,000 × 30 #>       id name        symbol slug   cmc_rank market_pair_count circulating_supply #>    <int> <chr>       <chr>  <chr>     <int>             <int>              <dbl> #>  1     1 Bitcoin     BTC    bitco…        1             11491          19719287  #>  2     2 Litecoin    LTC    litec…       19              1206          74705744. #>  3     3 Namecoin    NMC    namec…     1214                 7          14736400  #>  4     5 Peercoin    PPC    peerc…      926                41          28978051. #>  5     8 Feathercoin FTC    feath…     1537                12         236600238  #>  6    25 Goldcoin    GLC    goldc…     2004                12          43681422. #>  7    35 Phoenixcoin PXC    phoen…     1824                 4          91008781. #>  8    42 Primecoin   XPM    prime…     1611                 3          50016494. #>  9    45 CasinoCoin  CSC    casin…     3969                 9                 0  #> 10    52 XRP         XRP    xrp           7              1346       55688327582  #> # ℹ 4,990 more rows #> # ℹ 23 more variables: self_reported_circulating_supply <dbl>, #> #   total_supply <dbl>, max_supply <dbl>, is_active <int>, last_updated <date>, #> #   date_added <chr>, ref_currency <chr>, price <dbl>, volume24h <dbl>, #> #   market_cap <dbl>, percent_change1h <dbl>, percent_change24h <dbl>, #> #   percent_change7d <dbl>, percent_change30d <dbl>, percent_change60d <dbl>, #> #   percent_change90d <dbl>, fully_dillutted_market_cap <dbl>, … all_quotes <- crypto_global_quotes(which=\"historical\", quote=TRUE) #> ❯ Scraping historical global data #>  #> ❯ Processing historical crypto data #>  all_quotes #> # A tibble: 4,081 × 17 #>    timestamp  btc_dominance eth_dominance         score USD_total_market_cap #>    <date>             <dbl>         <dbl>         <dbl>                <dbl> #>  1 2013-04-29          94.2             0 1367193600000           1583440000 #>  2 2013-04-30          94.4             0 1367280000000           1686950016 #>  3 2013-05-01          94.4             0 1367366400000           1637389952 #>  4 2013-05-02          94.1             0 1367452800000           1333880064 #>  5 2013-05-03          94.2             0 1367539200000           1275410048 #>  6 2013-05-04          93.9             0 1367625600000           1169469952 #>  7 2013-05-05          94.0             0 1367712000000           1335379968 #>  8 2013-05-06          94.1             0 1367798400000           1370880000 #>  9 2013-05-07          94.4             0 1367884800000           1313900032 #> 10 2013-05-08          94.4             0 1367971200000           1320509952 #> # ℹ 4,071 more rows #> # ℹ 12 more variables: USD_total_volume24h <dbl>, #> #   USD_total_volume24h_reported <dbl>, USD_altcoin_volume24h <dbl>, #> #   USD_altcoin_volume24h_reported <dbl>, USD_altcoin_market_cap <dbl>, #> #   USD_original_score <chr>, active_cryptocurrencies <int>, #> #   active_market_pairs <int>, active_exchanges <int>, #> #   total_cryptocurrencies <int>, total_exchanges <int>, origin_id <chr> all_quotes %>% select(timestamp, USD_total_market_cap, USD_altcoin_market_cap) %>%    tidyr::pivot_longer(cols = 2:3, names_to = \"Market Cap\", values_to = \"bn. USD\") %>%    tidyr::separate(`Market Cap`,into = c(\"Currency\",\"Type\",\"Market\",\"Cap\")) %>%    dplyr::mutate(`bn. USD`=`bn. USD`/1000000000) %>%    ggplot2::ggplot(ggplot2::aes(x=timestamp,y=`bn. USD`,color=Type)) + ggplot2::geom_line() +   ggplot2::labs(title=\"Market capitalization in bn USD\", subtitle=\"CoinMarketCap.com\") exchanges <- exchange_list(only_active=TRUE) exchanges #> # A tibble: 787 × 6 #>       id name         slug  is_active first_historical_data last_historical_data #>    <int> <chr>        <chr>     <int> <date>                <date>               #>  1    16 Poloniex     polo…         1 2018-04-26            2024-07-02           #>  2    21 BTCC         btcc          1 2018-04-26            2024-07-02           #>  3    24 Kraken       krak…         1 2018-04-26            2024-07-02           #>  4    34 Bittylicious bitt…         1 2018-04-26            2024-07-02           #>  5    36 CEX.IO       cex-…         1 2018-04-26            2024-07-02           #>  6    37 Bitfinex     bitf…         1 2018-04-26            2024-07-02           #>  7    42 HitBTC       hitb…         1 2018-04-26            2024-07-02           #>  8    50 EXMO         exmo          1 2018-04-26            2024-07-02           #>  9    61 Okcoin       okco…         1 2018-04-26            2024-07-02           #> 10    68 Indodax      indo…         1 2018-04-26            2024-07-02           #> # ℹ 777 more rows ex_info <- exchange_info(exchanges %>% filter(slug %in% c('binance','kraken')), finalWait=FALSE) #> ❯ Scraping crypto info #>  #> ❯ Processing exchange info #>  ex_info #> # A tibble: 2 × 19 #>      id name    slug    logo   description date_launched notice is_hidden status #>   <int> <chr>   <chr>   <chr>  <chr>       <date>        <chr>      <int> <chr>  #> 1    24 Kraken  kraken  https… \"## What I… 2011-07-28    \"\"             0 active #> 2   270 Binance binance https… \"## What I… 2017-07-14    \"\"             0 active #> # ℹ 10 more variables: type <chr>, maker_fee <dbl>, taker_fee <dbl>, #> #   platform_id <int>, dex_status <int>, wallet_source_status <int>, #> #   tags <lgl>, countries <lgl>, fiats <list>, urls <list> ex_info %>% select(contains(\"fee\")) #> # A tibble: 2 × 2 #>   maker_fee taker_fee #>       <dbl>     <dbl> #> 1      0.02      0.05 #> 2      0.02      0.04 ex_info %>% select(slug,fiats) %>% tidyr::unnest(fiats) #> # A tibble: 18 × 2 #>    slug    fiats  #>    <chr>   <chr>  #>  1 kraken  \"USD\"  #>  2 kraken  \"EUR\"  #>  3 kraken  \"GBP\"  #>  4 kraken  \"CAD\"  #>  5 kraken  \"JPY\"  #>  6 kraken  \"CHF\"  #>  7 kraken  \"AUD\"  #>  8 binance \"EUR\"  #>  9 binance \" GBP\" #> 10 binance \" BRL\" #> 11 binance \" AUD\" #> 12 binance \" UAH\" #> 13 binance \" RUB\" #> 14 binance \" TRY\" #> 15 binance \" ZAR\" #> 16 binance \" PLN\" #> 17 binance \" NGN\" #> 18 binance \" RON\""},{"path":"https://sstoeckl.github.io/crypto2/index.html","id":"authorlicense","dir":"","previous_headings":"Package Usage","what":"Author/License","title":"Download Crypto Currency Data from CoinMarketCap without API","text":"Sebastian Stöckl - Package Creator, Modifier & Maintainer - sstoeckl github project licensed MIT License - see <license.md> file details<\/license.md>","code":""},{"path":"https://sstoeckl.github.io/crypto2/index.html","id":"acknowledgments","dir":"","previous_headings":"Package Usage","what":"Acknowledgments","title":"Download Crypto Currency Data from CoinMarketCap without API","text":"Thanks team https://coinmarketcap.com great work , especially Alice Liu (Research Lead) Aaron K. support regard information delistings. Thanks Jesse Vent providing (fully research compatible) crypto-package inspired package.","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/construct_url.html","id":null,"dir":"Reference","previous_headings":"","what":"URL Creator — construct_url","title":"URL Creator — construct_url","text":"URL Creator","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/construct_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL Creator — construct_url","text":"","code":"construct_url(path, v = 1)"},{"path":"https://sstoeckl.github.io/crypto2/reference/construct_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"URL Creator — construct_url","text":"path path append base URL","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/construct_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL Creator — construct_url","text":"full URL string","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/convert_date.html","id":null,"dir":"Reference","previous_headings":"","what":"checks the dater format (old/new) and converts to date — convert_date","title":"checks the dater format (old/new) and converts to date — convert_date","text":"checks dater format (old/new) converts date","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/convert_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"checks the dater format (old/new) and converts to date — convert_date","text":"","code":"convert_date(date_str)"},{"path":"https://sstoeckl.github.io/crypto2/reference/convert_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"checks the dater format (old/new) and converts to date — convert_date","text":"date_str date string","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/convert_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"checks the dater format (old/new) and converts to date — convert_date","text":"correct date","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_global_quotes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves historical quotes for the global aggregate market — crypto_global_quotes","title":"Retrieves historical quotes for the global aggregate market — crypto_global_quotes","text":"code retrieves global quote data (latest/historic) coinmarketcap.com.","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_global_quotes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves historical quotes for the global aggregate market — crypto_global_quotes","text":"","code":"crypto_global_quotes(   which = \"latest\",   convert = \"USD\",   start_date = NULL,   end_date = NULL,   interval = \"daily\",   quote = FALSE,   requestLimit = 2200,   sleep = 0,   wait = 60,   finalWait = FALSE )"},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_global_quotes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves historical quotes for the global aggregate market — crypto_global_quotes","text":"string Shall code retrieve latest listing historic listing? convert string (default: USD) one available fiat precious metals prices (fiat_list()). one selected please separate comma (e.g. \"USD,BTC\"), necessary 'quote=TRUE' start_date string Start date retrieve data , format 'yyyymmdd' end_date string End date retrieve data , format 'yyyymmdd', provided, today assumed interval string Interval sample data, default 'daily'. Must one \"1d\" \"2d\" \"3d\" \"15d\" \"30d\" \"60d\" quote logical set TRUE want include price data (FALSE=default) requestLimit integer (default 2200) Maximum number requests one API call can handle sleep integer (default 0) Seconds sleep API requests wait waiting time retry case fail (needs larger 60s case server blocks many attempts, default=60) finalWait avoid calling web-api another command 60s (TRUE=default)","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_global_quotes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves historical quotes for the global aggregate market — crypto_global_quotes","text":"List latest/new/historic listings crypto currencies tibble (depending \"\"-switch whether \"quote\" requested, result may contain following variables): btc_dominance number Bitcoin's market dominance percentage market cap. eth_dominance number Ethereum's market dominance percentage market cap. active_cryptocurrencies number Count active crypto currencies tracked CMC includes crypto currencies listing_status \"active\" \"listed\". total_cryptocurrencies number Count crypto currencies tracked CMC includes \"inactive\" listing_status crypto currencies. active_market_pairs number Count active market pairs tracked CoinMarketCap across exchanges. #' active_exchanges number Count active exchanges tracked CMC includes exchanges listing_status \"active\" \"listed\". total_exchanges number Count exchanges tracked CMC includes \"inactive\" listing_status exchanges. last_updated Timestamp record last updated. total_market_cap number sum individual cryptocurrency market capitalizations requested currency. total_volume_24h number sum rolling 24 hour adjusted volume (outlined methodology) crypto currencies requested currency. total_volume_24h_reported number sum rolling 24 hour reported volume crypto currencies requested currency. #' altcoin_volume_24h number sum rolling 24 hour adjusted volume (outlined methodology) crypto currencies excluding Bitcoin requested currency. altcoin_volume_24h_reported number sum rolling 24 hour reported volume crypto currencies excluding Bitcoin requested currency. altcoin_market_cap number sum individual cryptocurrency market capitalizations excluding Bitcoin requested currency.","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_global_quotes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves historical quotes for the global aggregate market — crypto_global_quotes","text":"","code":"if (FALSE) { # return new listings from the last 30 days new_quotes <- crypto_global_quotes(which=\"latest\", quote=TRUE, convert=\"BTC\") # return all global quotes in the first week of January 2014 quotes_2014w1 <- crypto_global_quotes(which=\"historical\", quote=TRUE,   start_date = \"20140101\", end_date=\"20140107\", interval=\"daily\")  # report in two different currencies listings_2014w1_USDBTC <- crypto_global_quotes(which=\"historical\", quote=TRUE,   start_date = \"20200101\", end_date=\"20240530\", interval=\"daily\", convert=\"BTC\") }"},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Get historic crypto currency market data — crypto_history","title":"Get historic crypto currency market data — crypto_history","text":"Scrape crypto currency historic market tables 'CoinMarketCap' https://coinmarketcap.com display results dataframe/tibble. can used conduct analysis crypto financial markets attempt predict future market movements trends.","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get historic crypto currency market data — crypto_history","text":"","code":"crypto_history(   coin_list = NULL,   convert = \"USD\",   limit = NULL,   start_date = NULL,   end_date = NULL,   interval = NULL,   requestLimit = 400,   sleep = 0,   wait = 60,   finalWait = FALSE,   single_id = TRUE )"},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get historic crypto currency market data — crypto_history","text":"coin_list string NULL retrieve currently existing coins (crypto_list()), provide list crypto currencies crypto_list() cryptoi_listings() format (e.g. current /dead coins since 2015) convert (default: USD) one available fiat prices (fiat_list()) bitcoin 'BTC'. aware, since 2024 USD BTC available ! limit integer Return top n records, default tokens start_date date Start date retrieve data end_date date End date retrieve data , provided, today assumed interval string Interval sample data according seq() needs requestLimit limiting length request URLs bundling api calls sleep integer (default 60) Seconds sleep API requests wait waiting time retry case fail (needs larger 60s case server blocks many attempts, default=60) finalWait avoid calling web-api another command 60s (TRUE=default) single_id Download data coin coin (May 2024 necessary)","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get historic crypto currency market data — crypto_history","text":"Crypto currency historic OHLC market data dataframe additional information via attribute \"info\": timestamp Timestamp entry database id Coin market cap unique id name Coin name symbol Coin symbol ref_cur_id reference Currency id ref_cur_name reference Currency name open Market open high Market high low Market low close Market close volume Volume 24 hours market_cap Market cap - close x circulating supply time_open Timestamp open time_close Timestamp close time_high Timestamp high time_low Timestamp low main function crypto package. want retrieve active coins pass argument crypto_history(), alternatively pass coin name.","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get historic crypto currency market data — crypto_history","text":"","code":"if (FALSE) {  # Retrieving market history for ALL crypto currencies all_coins <- crypto_history(limit = 2) one_coin <- crypto_history(limit = 1, convert=\"BTC\")  # Retrieving market history since 2020 for ALL crypto currencies all_coins <- crypto_history(start_date = '2020-01-01',limit=10)  # Retrieve 2015 history for all 2015 crypto currencies coin_list_2015 <- crypto_list(only_active=TRUE) %>%               dplyr::filter(first_historical_data<=\"2015-12-31\",               last_historical_data>=\"2015-01-01\") coins_2015 <- crypto_history(coin_list = coin_list_2015,               start_date = \"2015-01-01\", end_date=\"2015-12-31\", limit=20, interval=\"30d\") # retrieve hourly bitcoin data for 2 days btc_hourly <- crypto_history(coin_list = coin_list_2015,               start_date = \"2015-01-01\", end_date=\"2015-01-03\", limit=1, interval=\"1h\")  }"},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves info (urls, logo, description, tags, platform, date_added, notice, status,...) on CMC for given id — crypto_info","title":"Retrieves info (urls, logo, description, tags, platform, date_added, notice, status,...) on CMC for given id — crypto_info","text":"code retrieves data specified coins!","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves info (urls, logo, description, tags, platform, date_added, notice, status,...) on CMC for given id — crypto_info","text":"","code":"crypto_info(   coin_list = NULL,   limit = NULL,   requestLimit = 1,   sleep = 0,   finalWait = FALSE )"},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves info (urls, logo, description, tags, platform, date_added, notice, status,...) on CMC for given id — crypto_info","text":"coin_list string NULL retrieve currently active coins (crypto_list()), provide list cryptocurrencies crypto_list() cryptoi_listings() format (e.g. current /dead coins since 2015) limit integer Return top n records, default tokens requestLimit (default: 1) limiting length request URLs bundling api calls (currently needs 1) sleep integer (default: 0) Seconds sleep API requests finalWait avoid calling web-api another command 60s (FALSE=default)","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves info (urls, logo, description, tags, platform, date_added, notice, status,...) on CMC for given id — crypto_info","text":"List (active historically existing) cryptocurrencies tibble: id CMC id (unique identifier) name Coin name symbol Coin symbol (-unique) slug Coin URL slug (unique) category Coin category: \"token\" \"coin\" description Coin description according CMC logo CMC url CC logo status Status message CMC notice Markdown formatted notices CMC alert_type Type alert CMC alert_link Message link alert date_added Date CC added CMC database date_launched Date CC launched is_audited Boolean CC audited flags Boolean flags various topics self_reported_circulating_supply Self reported circulating supply tags Tibble tags tag categories faq_description FAQ description CMC url Tibble various resource urls. Gives website, technical_doc (whitepaper), source_code, message_board, chat, announcement, reddit, twitter, (block) explorer urls platform Metadata parent coin available. Gives id, name, symbol, slug, token address according CMC","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves info (urls, logo, description, tags, platform, date_added, notice, status,...) on CMC for given id — crypto_info","text":"","code":"if (FALSE) { # return info for bitcoin coin_info <- crypto_info(limit=10) }"},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_list","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_list","text":"code uses web api. retrieves data historic active coins require 'API' key.","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_list","text":"","code":"crypto_list(only_active = TRUE, add_untracked = FALSE)"},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_list","text":"only_active Shall code retrieve active coins (TRUE=default) include inactive coins (FALSE) add_untracked Shall code additionally retrieve untracked coins (FALSE=default)","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_list","text":"List (active historically existing) cryptocurrencies tibble: id CMC id (unique identifier) name Coin name symbol Coin symbol (-unique) slug Coin URL slug (unique) rank Current rank CMC (still active) is_active Flag showing whether coin active (1), inactive(0) untracked (-1) first_historical_data First time listed CMC last_historical_data Last time listed CMC, today's date still listed","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_list","text":"","code":"if (FALSE) { # return all coins active_list <- crypto_list(only_active=TRUE) all_but_untracked_list <- crypto_list(only_active=FALSE) full_list <- crypto_list(only_active=FALSE,add_untracked=TRUE)  # return all coins active in 2015 coin_list_2015 <- active_list %>% dplyr::filter(first_historical_data<=\"2015-12-31\",               last_historical_data>=\"2015-01-01\") }"},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_listings.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_listings","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_listings","text":"code retrieves listing data (latest/new/historic).","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_listings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_listings","text":"","code":"crypto_listings(   which = \"latest\",   convert = \"USD\",   limit = 5000,   start_date = NULL,   end_date = NULL,   interval = \"day\",   quote = FALSE,   sort = \"cmc_rank\",   sort_dir = \"asc\",   sleep = 0,   wait = 60,   finalWait = FALSE )"},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_listings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_listings","text":"string Shall code retrieve latest listing, new listings historic listing? convert string (default: USD) one available fiat prices (fiat_list()). one selected please separate comma (e.g. \"USD,BTC\"), necessary 'quote=TRUE' limit integer Return top n records start_date string Start date retrieve data , format 'yyyymmdd' end_date string End date retrieve data , format 'yyyymmdd', provided, today assumed interval string Interval sample data according seq() needs quote logical set TRUE want include price data (FALSE=default) sort (May 2024: currently available) string use sort results, possible values: \"name\", \"symbol\", \"market_cap\", \"price\", \"circulating_supply\", \"total_supply\", \"max_supply\", \"num_market_pairs\", \"volume_24h\", \"volume_7d\", \"volume_30d\", \"percent_change_1h\", \"percent_change_24h\", \"percent_change_7d\". Especially useful want download top x entries using \"limit\" (deprecated \"new\") sort_dir (May 2024: currently available) string used specify direction sort \"sort\". Possible values \"asc\" (DEFAULT) \"desc\" sleep integer (default 0) Seconds sleep API requests wait waiting time retry case fail (needs larger 60s case server blocks many attempts, default=60) finalWait avoid calling web-api another command 60s (TRUE=default)","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/crypto_listings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — crypto_listings","text":"List latest/new/historic listings cryptocurrencies tibble (depending \"\"-switch whether \"quote\" requested, result may contain following variables): id CMC id (unique identifier) name Coin name symbol Coin symbol (-unique) slug Coin URL slug (unique) date_added Date coin added dataset last_updated Last update data database rank Current rank CMC (still active) market_cap market cap - close x circulating supply market_cap_by_total_supply market cap - close x total supply market_cap_dominance market cap dominance fully_diluted_market_cap fully diluted market cap self_reported_market_cap source market cap self-reported self_reported_circulating_supply source circulating supply self-reported tvl_ratio percentage total value locked price latest average price circulating_supply approx. number coins circulation total_supply approx. total amount coins existence right now (minus coins verifiably burned) max_supply CMC approx. max amount coins ever exist lifetime currency num_market_pairs number market pairs across exchanges coin tvl total value locked volume_24h Volume 24 hours volume_change_24h Volume change 24 hours percent_change_1h 1 hour return percent_change_24h 24 hour return percent_change_7d 7 day return percent_change_30d 30 day return percent_change_60d 60 day return percent_change_90d 90 day return","code":""},{"path":[]},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves info (urls,logo,description,tags,platform,date_added,notice,status) on CMC for given exchange slug — exchange_info","title":"Retrieves info (urls,logo,description,tags,platform,date_added,notice,status) on CMC for given exchange slug — exchange_info","text":"code uses web api. retrieves data active, delisted untracked exchanges! require 'API' key.","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves info (urls,logo,description,tags,platform,date_added,notice,status) on CMC for given exchange slug — exchange_info","text":"","code":"exchange_info(   exchange_list = NULL,   limit = NULL,   requestLimit = 1,   sleep = 0,   finalWait = FALSE )"},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves info (urls,logo,description,tags,platform,date_added,notice,status) on CMC for given exchange slug — exchange_info","text":"exchange_list string NULL retrieve currently active exchanges (exchange_list()), provide list exchanges exchange_list() format (e.g. current /delisted) limit integer Return top n records, default exchanges requestLimit limiting length request URLs bundling api calls sleep integer (default 60) Seconds sleep API requests finalWait avoid calling web-api another command 60s (TRUE=default)","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves info (urls,logo,description,tags,platform,date_added,notice,status) on CMC for given exchange slug — exchange_info","text":"List (active historically existing) exchanges tibble: id CMC exchange id (unique identifier) name Exchange name slug Exchange URL slug (unique) description Exchange description according CMC notice Exchange notice (markdown formatted) according CMC logo CMC url CC logo type Type exchange date_launched Launch date exchange is_hidden TBD is_redistributable TBD maker_fee Exchanges maker fee taker_fee Exchanges maker fee platform_id Platform id CMC dex_status Decentralized exchange status wallet_source_status Wallet source status status Activity status CMC tags Tibble tags tag categories urls Tibble various resource urls. Gives website, blog, fee, twitter. countries Tibble countries exchange active fiats Tibble fiat currencies exchange trades ","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves info (urls,logo,description,tags,platform,date_added,notice,status) on CMC for given exchange slug — exchange_info","text":"","code":"if (FALSE) { # return info for the first three exchanges exchange_info <- exchange_info(limit=10) }"},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — exchange_list","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — exchange_list","text":"code uses web api. retrieves data historic active exchanges require 'API' key.","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — exchange_list","text":"","code":"exchange_list(only_active = TRUE, add_untracked = FALSE)"},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — exchange_list","text":"only_active Shall code retrieve active exchanges (TRUE=default) include inactive coins (FALSE) add_untracked Shall code additionally retrieve untracked exchanges (FALSE=default)","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — exchange_list","text":"List (active historically existing) exchanges tibble: id CMC exchange id (unique identifier) name Exchange name slug Exchange URL slug (unique) is_active Flag showing whether exchange active (1), inactive(0) untracked (-1) first_historical_data First time listed CMC last_historical_data Last time listed CMC, today's date still listed","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/exchange_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves name, CMC id, symbol, slug, rank, an activity flag as well as activity dates on CMC for all coins — exchange_list","text":"","code":"if (FALSE) { # return all exchanges ex_active_list <- exchange_list(only_active=TRUE) ex_all_but_untracked_list <- exchange_list(only_active=FALSE) ex_full_list <- exchange_list(only_active=FALSE,add_untracked=TRUE) }"},{"path":"https://sstoeckl.github.io/crypto2/reference/fiat_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves list of all CMC supported fiat currencies available to convert cryptocurrencies — fiat_list","title":"Retrieves list of all CMC supported fiat currencies available to convert cryptocurrencies — fiat_list","text":"code retrieves data available fiat currencies available website.","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/fiat_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves list of all CMC supported fiat currencies available to convert cryptocurrencies — fiat_list","text":"","code":"fiat_list(include_metals = FALSE)"},{"path":"https://sstoeckl.github.io/crypto2/reference/fiat_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves list of all CMC supported fiat currencies available to convert cryptocurrencies — fiat_list","text":"include_metals Shall results include precious metals (TRUE) (FALSE=default). Update: May 2024 metals included file","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/fiat_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves list of all CMC supported fiat currencies available to convert cryptocurrencies — fiat_list","text":"List (active historically existing) cryptocurrencies tibble: id CMC id (unique identifier) symbol Coin symbol (-unique) name Coin name sign Fiat currency sign","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/fiat_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves list of all CMC supported fiat currencies available to convert cryptocurrencies — fiat_list","text":"","code":"if (FALSE) { # return fiat currencies available through the CMC api fiat_list <- fiat_list() }"},{"path":"https://sstoeckl.github.io/crypto2/reference/safeFromJSON.html","id":null,"dir":"Reference","previous_headings":"","what":"Parses json data from a string without revealing information about the source in case of an error — safeFromJSON","title":"Parses json data from a string without revealing information about the source in case of an error — safeFromJSON","text":"Parses json data string without revealing information source case error","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/safeFromJSON.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parses json data from a string without revealing information about the source in case of an error — safeFromJSON","text":"","code":"safeFromJSON(...)"},{"path":"https://sstoeckl.github.io/crypto2/reference/safeFromJSON.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parses json data from a string without revealing information about the source in case of an error — safeFromJSON","text":"...","code":""},{"path":"https://sstoeckl.github.io/crypto2/reference/safeFromJSON.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parses json data from a string without revealing information about the source in case of an error — safeFromJSON","text":"parsed JSON object","code":""},{"path":[]},{"path":"https://sstoeckl.github.io/crypto2/news/index.html","id":"crypto2-140","dir":"Changelog","previous_headings":"","what":"crypto2 1.4.0","title":"crypto2 1.4.0","text":"CRAN release: 2022-01-10 Due change web-api CMC can make one call api per minute (else, just deliver output first call 60 seconds). reduce overhang, redesigned interfaces retrieve many ids one api call possible (limited 2000 character limitation URL). can set requestLimit increase/decrease number simultaneous ids retrieved CMC.","code":""},{"path":"https://sstoeckl.github.io/crypto2/news/index.html","id":"crypto2-130","dir":"Changelog","previous_headings":"","what":"crypto2 1.3.0","title":"crypto2 1.3.0","text":"CRAN release: 2021-06-24 Rewrite crypto_info exchange_info take similar input crypto_history. Also extensively updated readme.","code":""},{"path":"https://sstoeckl.github.io/crypto2/news/index.html","id":"crypto2-121","dir":"Changelog","previous_headings":"","what":"crypto2 1.2.1","title":"crypto2 1.2.1","text":"Adapt spelling ’’ CRAN explain taken Jesse Vent package authors (except function names everything else new)","code":""},{"path":"https://sstoeckl.github.io/crypto2/news/index.html","id":"crypto2-120","dir":"Changelog","previous_headings":"","what":"crypto2 1.2.0","title":"crypto2 1.2.0","text":"Add Exchange functions, delete unnecessary functions, update readme, prepare submission cran","code":""},{"path":"https://sstoeckl.github.io/crypto2/news/index.html","id":"crypto2-1139000","dir":"Changelog","previous_headings":"","what":"crypto2 1.1.3.9000","title":"crypto2 1.1.3.9000","text":"Corrected small error crypto_info non-existing slugs led break code (reason stopped using “Insistent”)","code":""},{"path":"https://sstoeckl.github.io/crypto2/news/index.html","id":"crypto2-1139000-1","dir":"Changelog","previous_headings":"","what":"crypto2 1.1.3.9000","title":"crypto2 1.1.3.9000","text":"Correct glitch tag data, now enough group observations available. Info therefore deleted. Corrected small error empty list coin_info","code":""},{"path":"https://sstoeckl.github.io/crypto2/news/index.html","id":"crypto2-1129000","dir":"Changelog","previous_headings":"","what":"crypto2 1.1.2.9000","title":"crypto2 1.1.2.9000","text":"Added NEWS.md file track changes package. Deleted necessary API key crypto_list(). Now need api key anymore","code":""}]
